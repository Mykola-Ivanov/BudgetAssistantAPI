// <auto-generated />
using System;
using BudgetAssistantAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BudgetAssistantAPI.Migrations
{
    [DbContext(typeof(BudgetAssistantDbContext))]
    [Migration("20240220155529_init-migration")]
    partial class initmigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BudgetAssistantAPI.Models.BudgetGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BudgetGroups");
                });

            modelBuilder.Entity("BudgetAssistantAPI.Models.BudgetRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("AddedById")
                        .HasColumnType("int");

                    b.Property<int?>("BudgetGroupId")
                        .HasColumnType("int");

                    b.Property<int?>("BudgetRecordTypeId")
                        .HasColumnType("int");

                    b.Property<double>("Currency")
                        .HasColumnType("float");

                    b.Property<int?>("PlaceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AddedById");

                    b.HasIndex("BudgetGroupId");

                    b.HasIndex("BudgetRecordTypeId");

                    b.HasIndex("PlaceId");

                    b.ToTable("BudgetRecords");
                });

            modelBuilder.Entity("BudgetAssistantAPI.Models.BudgetRecordType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BudgetRecordTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BudgetRecordTypes");
                });

            modelBuilder.Entity("BudgetAssistantAPI.Models.Building", b =>
                {
                    b.Property<int>("BuildingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BuildingId"), 1L, 1);

                    b.Property<string>("BuildingCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StreetId")
                        .HasColumnType("int");

                    b.HasKey("BuildingId");

                    b.HasIndex("StreetId");

                    b.ToTable("Buildings");
                });

            modelBuilder.Entity("BudgetAssistantAPI.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CountryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("BudgetAssistantAPI.Models.District", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("DistrictName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Districts");
                });

            modelBuilder.Entity("BudgetAssistantAPI.Models.Place", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("BuildingId")
                        .HasColumnType("int");

                    b.Property<string>("PlaceName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BuildingId");

                    b.ToTable("Places");
                });

            modelBuilder.Entity("BudgetAssistantAPI.Models.Settlement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("DistrictId")
                        .HasColumnType("int");

                    b.Property<string>("SettlementName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.ToTable("Settlements");
                });

            modelBuilder.Entity("BudgetAssistantAPI.Models.Street", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("SettlementId")
                        .HasColumnType("int");

                    b.Property<string>("StreetName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SettlementId");

                    b.ToTable("Streets");
                });

            modelBuilder.Entity("BudgetAssistantAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BudgetGroupUser", b =>
                {
                    b.Property<int>("BudgetGroupsId")
                        .HasColumnType("int");

                    b.Property<int>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("BudgetGroupsId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("BudgetGroupUser");
                });

            modelBuilder.Entity("BudgetAssistantAPI.Models.BudgetRecord", b =>
                {
                    b.HasOne("BudgetAssistantAPI.Models.User", "AddedBy")
                        .WithMany()
                        .HasForeignKey("AddedById");

                    b.HasOne("BudgetAssistantAPI.Models.BudgetGroup", "BudgetGroup")
                        .WithMany("BudgetRecords")
                        .HasForeignKey("BudgetGroupId");

                    b.HasOne("BudgetAssistantAPI.Models.BudgetRecordType", "BudgetRecordType")
                        .WithMany("BudgetRecords")
                        .HasForeignKey("BudgetRecordTypeId");

                    b.HasOne("BudgetAssistantAPI.Models.Place", "Place")
                        .WithMany("BudgetRecords")
                        .HasForeignKey("PlaceId");

                    b.Navigation("AddedBy");

                    b.Navigation("BudgetGroup");

                    b.Navigation("BudgetRecordType");

                    b.Navigation("Place");
                });

            modelBuilder.Entity("BudgetAssistantAPI.Models.Building", b =>
                {
                    b.HasOne("BudgetAssistantAPI.Models.Street", "Street")
                        .WithMany("Buildings")
                        .HasForeignKey("StreetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Street");
                });

            modelBuilder.Entity("BudgetAssistantAPI.Models.District", b =>
                {
                    b.HasOne("BudgetAssistantAPI.Models.Country", "Country")
                        .WithMany("Districts")
                        .HasForeignKey("CountryId");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("BudgetAssistantAPI.Models.Place", b =>
                {
                    b.HasOne("BudgetAssistantAPI.Models.Building", "Building")
                        .WithMany("Places")
                        .HasForeignKey("BuildingId");

                    b.Navigation("Building");
                });

            modelBuilder.Entity("BudgetAssistantAPI.Models.Settlement", b =>
                {
                    b.HasOne("BudgetAssistantAPI.Models.District", "District")
                        .WithMany("Settlements")
                        .HasForeignKey("DistrictId");

                    b.Navigation("District");
                });

            modelBuilder.Entity("BudgetAssistantAPI.Models.Street", b =>
                {
                    b.HasOne("BudgetAssistantAPI.Models.Settlement", "Settlement")
                        .WithMany("Streets")
                        .HasForeignKey("SettlementId");

                    b.Navigation("Settlement");
                });

            modelBuilder.Entity("BudgetGroupUser", b =>
                {
                    b.HasOne("BudgetAssistantAPI.Models.BudgetGroup", null)
                        .WithMany()
                        .HasForeignKey("BudgetGroupsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BudgetAssistantAPI.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BudgetAssistantAPI.Models.BudgetGroup", b =>
                {
                    b.Navigation("BudgetRecords");
                });

            modelBuilder.Entity("BudgetAssistantAPI.Models.BudgetRecordType", b =>
                {
                    b.Navigation("BudgetRecords");
                });

            modelBuilder.Entity("BudgetAssistantAPI.Models.Building", b =>
                {
                    b.Navigation("Places");
                });

            modelBuilder.Entity("BudgetAssistantAPI.Models.Country", b =>
                {
                    b.Navigation("Districts");
                });

            modelBuilder.Entity("BudgetAssistantAPI.Models.District", b =>
                {
                    b.Navigation("Settlements");
                });

            modelBuilder.Entity("BudgetAssistantAPI.Models.Place", b =>
                {
                    b.Navigation("BudgetRecords");
                });

            modelBuilder.Entity("BudgetAssistantAPI.Models.Settlement", b =>
                {
                    b.Navigation("Streets");
                });

            modelBuilder.Entity("BudgetAssistantAPI.Models.Street", b =>
                {
                    b.Navigation("Buildings");
                });
#pragma warning restore 612, 618
        }
    }
}
